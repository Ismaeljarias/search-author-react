// Generated by https://quicktype.io

export interface Authors {
  numFound: number;
  start: number;
  numFoundExact: boolean;
  docs: Info[];
}

export interface Info {
  key: string;
  type: string;
  name: string;
  alternate_names?: string[];
  birth_date?: string;
  death_date?: string;
  top_work: string;
  work_count: number;
  top_subjects?: string[];
  _version_: number;
}

export interface AuthorWork {
  links: Links;
  size: number;
  entries: Entry[];
}

export interface Entry {
  title: string;
  authors: Author[];
  key: string;
  type: TypeClass;
  latest_revision: number;
  revision: number;
  created: Created;
  last_modified: Created;
  covers?: number[];
  description?: Created | string;
  subjects?: string[];
  links?: Link[];
  subject_places?: string[];
  subject_people?: string[];
  excerpts?: Excerpt[];
  subject_times?: string[];
  first_sentence?: Created;
}

export interface Author {
  author: TypeClass;
  type: TypeClass;
}

export interface TypeClass {
  key: string;
}

export enum TypeEnum {
  TypeDatetime = "/type/datetime",
  TypeText = "/type/text",
}

export interface Excerpt {
  excerpt: string;
  comment: string;
  author: TypeClass;
}

export interface Link {
  url: string;
  title: string;
  type: TypeClass;
}

export interface Links {
  self: string;
  author: string;
  next: string;
}

// Generated by https://quicktype.io

export interface BookDetails {
  key: string;
  authors: Author[];
  excerpts: Excerpt[];
  title: string;
  first_sentence?: Created;
  subjects?: string[];
  type: Type;
  covers?: number[];
  description: string;
  latest_revision: number;
  revision: number;
  created: Created;
  last_modified: Created;
}

export interface Author {
  author: Type;
  type: Type;
}

export interface Type {
  key: string;
}

export interface Created {
  type: string;
  value: string;
}

export interface Excerpt {
  excerpt: string;
}
